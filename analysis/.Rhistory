sitetype = str_c(as.character(assemblages$code), collapse = "")
site.types[nrow(site.types) + 1, ] <- c(as.character(site$overlap[1]),
as.character(site$total.groups[1]),
as.character(site$ed.freq[1]),
as.character(site$ed[1]),
as.character(sitetype))
}
}
View(site.types)
library(tidyr)
library(dplyr)
library(ggplot2)
library(stringr)
site.types = data.frame(
overlap = character(),
total.groups = character(),
ed.freq = character(),
ed = character(),
sitecode = character()
)
setwd(paste0("/Users/emilycoco/eclipse-workspace/recycling-Java/output/run", run.num))
files = list.files()
for(f in files) {
site = read.csv(f)
site = site[order(site$year),]
assemblages = site %>% filter(tools != 0)
if(nrow(assemblages) != 0) {
assemblages$code = NA
for(a in 1:nrow(assemblages)) {
#determine composition of each assemblage
# 1 = only type 1 tools
# 2 = only type 2 tools
# 3 = mix of type 1 and 2 tools but no mixed typology tools
# 4 = presence of only 12 tools
# 5 = presence of 12 and/or 21 tools
if(with(assemblages[a,], sum(retouch.12, retouch.21)) != 0) {
if(assemblages$retouch.21[a] != 0) {
assemblages$code[a] = 5
} else {assemblages$code[a] = 4}
}else {
if(assemblages$retouch.11[a] != 0 & assemblages$retouch.22[a] == 0) {
assemblages$code[a] = 1
}else if(assemblages$retouch.22[a] != 0 & assemblages$retouch.11[a] == 0) {
assemblages$code[a] = 2
}else {
assemblages$code[a] = 3
}
}
}
sitetype = str_c(as.character(assemblages$code), collapse = "")
site.types[nrow(site.types) + 1, ] = c(as.character(assemblages$overlap[1]),
as.character(assemblages$total.groups[1]),
as.character(assemblages$ed.freq[1]),
as.character(assemblages$ed[1]),
as.character(sitetype))
}
}
View(site.types)
library(tidyr)
library(dplyr)
library(ggplot2)
library(stringr)
site.types = data.frame(
overlap = character(),
total.groups = character(),
ed.freq = character(),
ed = character(),
sitecode = character()
)
setwd(paste0("/Users/emilycoco/eclipse-workspace/recycling-Java/output/run", run.num))
files = list.files()
for(f in files) {
site = read.csv(f)
site = site[order(site$year),]
assemblages = site %>% filter(tools != 0)
if(nrow(assemblages) != 0) {
assemblages$code = NA
for(a in 1:nrow(assemblages)) {
#determine composition of each assemblage
# 1 = only type 1 tools
# 2 = only type 2 tools
# 3 = mix of type 1 and 2 tools but no mixed typology tools
# 4 = presence of only 12 tools
# 5 = presence of 12 and/or 21 tools
if(with(assemblages[a,], sum(retouch.12, retouch.21)) != 0) {
if(assemblages$retouch.21[a] != 0) {
assemblages$code[a] = 5
} else {assemblages$code[a] = 4}
}else {
if(assemblages$retouch.11[a] != 0 & assemblages$retouch.22[a] == 0) {
assemblages$code[a] = 1
}else if(assemblages$retouch.22[a] != 0 & assemblages$retouch.11[a] == 0) {
assemblages$code[a] = 2
}else {
assemblages$code[a] = 3
}
}
}
sitetype = str_c(as.character(assemblages$code), collapse = "")
# site.types[nrow(site.types) + 1, ] = c(as.character(assemblages$overlap[1]),
#                                         as.character(assemblages$total.groups[1]),
#                                         as.character(assemblages$ed.freq[1]),
#                                         as.character(assemblages$ed[1]),
#                                         as.character(sitetype))
site.types[nrow(site.types) + 1, ] = c(assemblages$overlap[1],
assemblages$total.groups[1],
assemblages$ed.freq[1],
assemblages$ed[1],
sitetype)
}
}
View(site.types)
warnings()
site.types = data.frame(
overlap = numeric(),
total.groups = numeric(),
ed.freq = numeric(),
ed = numeric(),
sitecode = character()
)
setwd(paste0("/Users/emilycoco/eclipse-workspace/recycling-Java/output/run", run.num))
files = list.files()
for(f in files) {
site = read.csv(f)
site = site[order(site$year),]
assemblages = site %>% filter(tools != 0)
if(nrow(assemblages) != 0) {
assemblages$code = NA
for(a in 1:nrow(assemblages)) {
#determine composition of each assemblage
# 1 = only type 1 tools
# 2 = only type 2 tools
# 3 = mix of type 1 and 2 tools but no mixed typology tools
# 4 = presence of only 12 tools
# 5 = presence of 12 and/or 21 tools
if(with(assemblages[a,], sum(retouch.12, retouch.21)) != 0) {
if(assemblages$retouch.21[a] != 0) {
assemblages$code[a] = 5
} else {assemblages$code[a] = 4}
}else {
if(assemblages$retouch.11[a] != 0 & assemblages$retouch.22[a] == 0) {
assemblages$code[a] = 1
}else if(assemblages$retouch.22[a] != 0 & assemblages$retouch.11[a] == 0) {
assemblages$code[a] = 2
}else {
assemblages$code[a] = 3
}
}
}
sitetype = str_c(as.character(assemblages$code), collapse = "")
# site.types[nrow(site.types) + 1, ] = c(as.character(assemblages$overlap[1]),
#                                         as.character(assemblages$total.groups[1]),
#                                         as.character(assemblages$ed.freq[1]),
#                                         as.character(assemblages$ed[1]),
#                                         as.character(sitetype))
site.types[nrow(site.types) + 1, ] = c(assemblages$overlap[1],
assemblages$total.groups[1],
assemblages$ed.freq[1],
assemblages$ed[1],
sitetype)
}
}
View(site.types)
site.types = data.frame(
overlap = numeric(),
total.groups = numeric(),
ed.freq = numeric(),
ed = numeric(),
sitecode = character()
)
setwd(paste0("/Users/emilycoco/eclipse-workspace/recycling-Java/output/run", run.num))
files = list.files()
for(f in files) {
site = read.csv(f)
site = site[order(site$year),]
assemblages = site %>% filter(tools != 0)
if(nrow(assemblages) != 0) {
assemblages$code = NA
for(a in 1:nrow(assemblages)) {
#determine composition of each assemblage
# 1 = only type 1 tools
# 2 = only type 2 tools
# 3 = mix of type 1 and 2 tools but no mixed typology tools
# 4 = presence of only 12 tools
# 5 = presence of 12 and/or 21 tools
if(with(assemblages[a,], sum(retouch.12, retouch.21)) != 0) {
if(assemblages$retouch.21[a] != 0) {
assemblages$code[a] = 5
} else {assemblages$code[a] = 4}
}else {
if(assemblages$retouch.11[a] != 0 & assemblages$retouch.22[a] == 0) {
assemblages$code[a] = 1
}else if(assemblages$retouch.22[a] != 0 & assemblages$retouch.11[a] == 0) {
assemblages$code[a] = 2
}else {
assemblages$code[a] = 3
}
}
}
sitetype = str_c(as.character(assemblages$code), collapse = "")
# site.types[nrow(site.types) + 1, ] = c(as.character(assemblages$overlap[1]),
#                                         as.character(assemblages$total.groups[1]),
#                                         as.character(assemblages$ed.freq[1]),
#                                         as.character(assemblages$ed[1]),
#                                         as.character(sitetype))
site.types[nrow(site.types) + 1, ] = c(assemblages$overlap[1],
assemblages$total.groups[1],
assemblages$ed.freq[1],
assemblages$ed[1],
"test")
}
}
site.types = data.frame(
overlap = numeric(),
total.groups = numeric(),
ed.freq = numeric(),
ed = numeric(),
sitecode = numeric()
)
setwd(paste0("/Users/emilycoco/eclipse-workspace/recycling-Java/output/run", run.num))
files = list.files()
for(f in files) {
site = read.csv(f)
site = site[order(site$year),]
assemblages = site %>% filter(tools != 0)
if(nrow(assemblages) != 0) {
assemblages$code = NA
for(a in 1:nrow(assemblages)) {
#determine composition of each assemblage
# 1 = only type 1 tools
# 2 = only type 2 tools
# 3 = mix of type 1 and 2 tools but no mixed typology tools
# 4 = presence of only 12 tools
# 5 = presence of 12 and/or 21 tools
if(with(assemblages[a,], sum(retouch.12, retouch.21)) != 0) {
if(assemblages$retouch.21[a] != 0) {
assemblages$code[a] = 5
} else {assemblages$code[a] = 4}
}else {
if(assemblages$retouch.11[a] != 0 & assemblages$retouch.22[a] == 0) {
assemblages$code[a] = 1
}else if(assemblages$retouch.22[a] != 0 & assemblages$retouch.11[a] == 0) {
assemblages$code[a] = 2
}else {
assemblages$code[a] = 3
}
}
}
sitetype = str_c(as.character(assemblages$code), collapse = "")
# site.types[nrow(site.types) + 1, ] = c(as.character(assemblages$overlap[1]),
#                                         as.character(assemblages$total.groups[1]),
#                                         as.character(assemblages$ed.freq[1]),
#                                         as.character(assemblages$ed[1]),
#                                         as.character(sitetype))
site.types[nrow(site.types) + 1, ] = c(assemblages$overlap[1],
assemblages$total.groups[1],
assemblages$ed.freq[1],
assemblages$ed[1],
"test")
}
}
View(site.types)
site.types = data.frame(
overlap = numeric(),
total.groups = numeric(),
ed.freq = numeric(),
ed = numeric(),
sitecode = numeric()
)
setwd(paste0("/Users/emilycoco/eclipse-workspace/recycling-Java/output/run", run.num))
files = list.files()
for(f in files) {
site = read.csv(f)
site = site[order(site$year),]
assemblages = site %>% filter(tools != 0)
if(nrow(assemblages) != 0) {
assemblages$code = NA
for(a in 1:nrow(assemblages)) {
#determine composition of each assemblage
# 1 = only type 1 tools
# 2 = only type 2 tools
# 3 = mix of type 1 and 2 tools but no mixed typology tools
# 4 = presence of only 12 tools
# 5 = presence of 12 and/or 21 tools
if(with(assemblages[a,], sum(retouch.12, retouch.21)) != 0) {
if(assemblages$retouch.21[a] != 0) {
assemblages$code[a] = 5
} else {assemblages$code[a] = 4}
}else {
if(assemblages$retouch.11[a] != 0 & assemblages$retouch.22[a] == 0) {
assemblages$code[a] = 1
}else if(assemblages$retouch.22[a] != 0 & assemblages$retouch.11[a] == 0) {
assemblages$code[a] = 2
}else {
assemblages$code[a] = 3
}
}
}
sitetype = str_c(as.character(assemblages$code), collapse = "")
# site.types[nrow(site.types) + 1, ] = c(as.character(assemblages$overlap[1]),
#                                         as.character(assemblages$total.groups[1]),
#                                         as.character(assemblages$ed.freq[1]),
#                                         as.character(assemblages$ed[1]),
#                                         as.character(sitetype))
site.types[nrow(site.types) + 1, ] = c(assemblages$overlap[1],
assemblages$total.groups[1],
assemblages$ed.freq[1],
assemblages$ed[1],
sitetype)
}
}
View(site.types)
source('~/eclipse-workspace/recycling-Java/analysis/get-site-types.R', echo=TRUE)
View(st)
View(site.types)
setwd("/Users/emilycoco/eclipse-workspace/recycling-Java/analysis")
load("site-types.RData")
st = site.types
#calculation of important variables
st$length = nchar(st$sitecode)
st$A = str_detect(st$sitecode, pattern = "1")
st$B = str_detect(st$sitecode, pattern = "2")
st$AB = str_detect(st$sitecode, pattern = "3")
st$M1 = str_detect(st$sitecode, pattern = "4")
st$M2 = str_detect(st$sitecode, pattern = "5")
st$fulltrans = str_detect(st$sitecode, pattern = "2+4+1+")
st$trans.UP = str_detect(st$sitecode, pattern = "2+4+")
st$MP.trans = str_detect(st$sitecode, pattern = "4+1+")
st$notrans = !st$M1 & !st$M2
st$allmix = !str_detect(st$sitecode, pattern = "1") &
!str_detect(st$sitecode, pattern = "2") &
!str_detect(st$sitecode, pattern = "3")
st$trans.MP = str_detect(st$sitecode, pattern = "1+4+") |
str_detect(st$sitecode, pattern = "1+5+") #this is important
st$UP.trans = str_detect(st$sitecode, pattern = "4+2+") |
str_detect(st$sitecode, pattern = "5+2+")
st$back.trans = str_detect(st$sitecode, pattern = "1+4+2+")
randomED = st %>% filter(ed == 0.5)
EDdif = st %>% filter(ed == 0.25 | ed == 0.75)
props = randomED %>% group_by(overlap, total.groups, ed.freq) %>%
summarize(A = sum(A, na.rm = TRUE)/n(),
B = sum(B, na.rm = TRUE)/n(),
AB = sum(AB, na.rm = TRUE)/n(),
M1 = sum(M1, na.rm = TRUE)/n(),
M2 = sum(M2, na.rm = TRUE)/n(),
ft = sum(fulltrans, na.rm = TRUE)/n(),
tU = sum(trans.UP, na.rm = TRUE)/n(),
Mt = sum(MP.trans, na.rm = TRUE)/n(),
nt = sum(notrans, na.rm = TRUE)/n(),
allmix = sum(allmix, na.rm = TRUE)/n(),
tM = sum(trans.MP, na.rm = TRUE)/n(),
Ut = sum(UP.trans, na.rm = TRUE)/n(),
bt = sum(back.trans, na.rm = TRUE)/n())
props$overlap = factor(props$overlap, levels = c("1", "0.5", "0"))
st2 = site.types
st2$A = str_count(st2$sitecode, pattern = "1")
st2$B = str_count(st2$sitecode, pattern = "2")
st2$AB = str_count(st2$sitecode, pattern = "3")
st2$M1 = str_count(st2$sitecode, pattern = "4")
st2$M2 = str_count(st2$sitecode, pattern = "5")
randomED2 = st2 %>% filter(ed == 0.5)
EDdif2 = st2 %>% filter(ed == 0.25 | ed == 0.75)
counts = randomED2 %>% group_by(overlap, total.groups, ed.freq) %>%
summarize(A = sum(A, na.rm = TRUE),
B = sum(B, na.rm = TRUE),
AB = sum(AB, na.rm = TRUE),
M1 = sum(M1, na.rm = TRUE),
M2 = sum(M2, na.rm = TRUE))
View(counts)
##not exactly like Fig 2 in the paper -- will need to count assemblages for that
atypes = counts %>% select(overlap, total.groups, ed.freq, A, B, AB, M1, M2) %>%
pivot_longer(c(A, B, AB, M1, M2), names_to = "type", values_to = "proportion") %>% filter(proportion != 0)
atypes$type = factor(atypes$type, levels = c("M2", "M1", "AB", "B", "A"))
ggplot(atypes, aes(x = as.factor(ed.freq), y = as.factor(type), color = as.factor(type))) +
geom_point(aes(size = proportion)) +
facet_grid(total.groups ~ overlap, labeller = label_both) +
scale_color_colorblind() +
guides(color = "none", size = "none")
setwd("/Users/emilycoco/eclipse-workspace/recycling-Java/analysis")
load("site-types.RData")
st = site.types
#calculation of important variables
st$length = nchar(st$sitecode)
st$A = str_detect(st$sitecode, pattern = "1")
st$B = str_detect(st$sitecode, pattern = "2")
st$AB = str_detect(st$sitecode, pattern = "3")
st$M1 = str_detect(st$sitecode, pattern = "4")
st$M2 = str_detect(st$sitecode, pattern = "5")
st$fulltrans = str_detect(st$sitecode, pattern = "2+4+1+")
st$trans.UP = str_detect(st$sitecode, pattern = "2+4+")
st$MP.trans = str_detect(st$sitecode, pattern = "4+1+")
st$notrans = !st$M1 & !st$M2
st$allmix = !str_detect(st$sitecode, pattern = "1") &
!str_detect(st$sitecode, pattern = "2") &
!str_detect(st$sitecode, pattern = "3")
st$trans.MP = str_detect(st$sitecode, pattern = "1+4+") |
str_detect(st$sitecode, pattern = "1+5+") #this is important
st$UP.trans = str_detect(st$sitecode, pattern = "4+2+") |
str_detect(st$sitecode, pattern = "5+2+")
st$back.trans = str_detect(st$sitecode, pattern = "1+4+2+")
randomED = st %>% filter(ed == 0.5)
EDdif = st %>% filter(ed == 0.25 | ed == 0.75)
props = randomED %>% group_by(overlap, total.groups, ed.freq) %>%
summarize(A = sum(A, na.rm = TRUE)/n(),
B = sum(B, na.rm = TRUE)/n(),
AB = sum(AB, na.rm = TRUE)/n(),
M1 = sum(M1, na.rm = TRUE)/n(),
M2 = sum(M2, na.rm = TRUE)/n(),
ft = sum(fulltrans, na.rm = TRUE)/n(),
tU = sum(trans.UP, na.rm = TRUE)/n(),
Mt = sum(MP.trans, na.rm = TRUE)/n(),
nt = sum(notrans, na.rm = TRUE)/n(),
allmix = sum(allmix, na.rm = TRUE)/n(),
tM = sum(trans.MP, na.rm = TRUE)/n(),
Ut = sum(UP.trans, na.rm = TRUE)/n(),
bt = sum(back.trans, na.rm = TRUE)/n())
props$overlap = factor(props$overlap, levels = c("1", "0.5", "0"))
st2 = site.types
st2$A = str_count(st2$sitecode, pattern = "1")
st2$B = str_count(st2$sitecode, pattern = "2")
st2$AB = str_count(st2$sitecode, pattern = "3")
st2$M1 = str_count(st2$sitecode, pattern = "4")
st2$M2 = str_count(st2$sitecode, pattern = "5")
randomED2 = st2 %>% filter(ed == 0.5)
EDdif2 = st2 %>% filter(ed == 0.25 | ed == 0.75)
counts = randomED2 %>% group_by(overlap, total.groups, ed.freq) %>%
summarize(A = sum(A, na.rm = TRUE),
B = sum(B, na.rm = TRUE),
AB = sum(AB, na.rm = TRUE),
M1 = sum(M1, na.rm = TRUE),
M2 = sum(M2, na.rm = TRUE))
#summary(counts$M1)
ggplot(data = props, aes(x = as.factor(ed.freq), y = as.numeric(M1), group = as.factor(ed.freq))) +
geom_boxplot() +
facet_grid(total.groups ~ overlap, labeller = label_both)
#summary(counts$M1)
ggplot(data = props, aes(x = as.factor(ed.freq), y = as.numeric(M2), group = as.factor(ed.freq))) +
geom_boxplot() +
facet_grid(total.groups ~ overlap, labeller = label_both)
ttypes = props %>% select(overlap, total.groups, ed.freq, ft, tU, Mt) %>%
pivot_longer(c(ft, tU, Mt), names_to = "type", values_to = "proportion")
ttypes$type = factor(ttypes$type, levels = c("Mt", "ft", "tU"))
ggplot(ttypes, aes(x = as.factor(ed.freq), y = as.numeric(proportion), color = type)) +
geom_boxplot() +
facet_grid(total.groups ~ overlap, labeller = label_both) +
scale_color_colorblind()
btypes = counts %>% select(overlap, total.groups, ed.freq, Ut, tM) %>%
pivot_longer(c(Ut, tM), names_to = "type", values_to = "proportion")
btypes = counts %>% select(overlap, total.groups, ed.freq, Ut, tM) %>%
pivot_longer(c(Ut, tM), names_to = "type", values_to = "proportion")
btypes = props %>% select(overlap, total.groups, ed.freq, Ut, tM) %>%
pivot_longer(c(Ut, tM), names_to = "type", values_to = "proportion")
btypes$type = factor(btypes$type, levels = c("Ut", "tM"))
ggplot(btypes, aes(x = as.factor(ed.freq), y = as.numeric(proportion), color = type)) +
geom_boxplot() +
facet_grid(total.groups ~ overlap, labeller = label_both) +
scale_color_colorblind()
setwd("/Users/emilycoco/eclipse-workspace/recycling-Java/analysis")
load("site-types.RData")
st = site.types
#calculation of important variables
st$length = nchar(st$sitecode)
st$A = str_detect(st$sitecode, pattern = "1")
st$B = str_detect(st$sitecode, pattern = "2")
st$AB = str_detect(st$sitecode, pattern = "3")
st$M1 = str_detect(st$sitecode, pattern = "4")
st$M2 = str_detect(st$sitecode, pattern = "5")
st$fulltrans = str_detect(st$sitecode, pattern = "2+4+1+")
st$trans.UP = str_detect(st$sitecode, pattern = "2+4+")
st$MP.trans = str_detect(st$sitecode, pattern = "4+1+")
st$notrans = !st$M1 & !st$M2
st$allmix = !str_detect(st$sitecode, pattern = "1") &
!str_detect(st$sitecode, pattern = "2") &
!str_detect(st$sitecode, pattern = "3")
st$trans.MP = str_detect(st$sitecode, pattern = "1+4+") |
str_detect(st$sitecode, pattern = "1+5+") #this is important
st$UP.trans = str_detect(st$sitecode, pattern = "4+2+") |
str_detect(st$sitecode, pattern = "5+2+")
st$back.trans = str_detect(st$sitecode, pattern = "1+4+2+")
randomED = st %>% filter(ed == 0.5)
EDdif = st %>% filter(ed == 0.25 | ed == 0.75)
props = randomED %>% group_by(overlap, total.groups, ed.freq) %>%
summarize(A = sum(A, na.rm = TRUE)/n(),
B = sum(B, na.rm = TRUE)/n(),
AB = sum(AB, na.rm = TRUE)/n(),
M1 = sum(M1, na.rm = TRUE)/n(),
M2 = sum(M2, na.rm = TRUE)/n(),
ft = sum(fulltrans, na.rm = TRUE)/n(),
tU = sum(trans.UP, na.rm = TRUE)/n(),
Mt = sum(MP.trans, na.rm = TRUE)/n(),
nt = sum(notrans, na.rm = TRUE)/n(),
allmix = sum(allmix, na.rm = TRUE)/n(),
tM = sum(trans.MP, na.rm = TRUE)/n(),
Ut = sum(UP.trans, na.rm = TRUE)/n(),
bt = sum(back.trans, na.rm = TRUE)/n())
props$overlap = factor(props$overlap, levels = c("1", "0.5", "0"))
st2 = site.types
st2$A = str_count(st2$sitecode, pattern = "1")
st2$B = str_count(st2$sitecode, pattern = "2")
st2$AB = str_count(st2$sitecode, pattern = "3")
st2$M1 = str_count(st2$sitecode, pattern = "4")
st2$M2 = str_count(st2$sitecode, pattern = "5")
randomED2 = st2 %>% filter(ed == 0.5)
EDdif2 = st2 %>% filter(ed == 0.25 | ed == 0.75)
counts = randomED2 %>% group_by(overlap, total.groups, ed.freq) %>%
summarize(A = sum(A, na.rm = TRUE),
B = sum(B, na.rm = TRUE),
AB = sum(AB, na.rm = TRUE),
M1 = sum(M1, na.rm = TRUE),
M2 = sum(M2, na.rm = TRUE))
View(st)
View(props)
